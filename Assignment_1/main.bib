@article{10.1145/3381449,
author = {Michail, Dimitrios and Kinable, Joris and Naveh, Barak and Sichi, John V.},
title = {JGraphTâ€”A Java Library for Graph Data Structures and Algorithms},
year = {2020},
issue_date = {June 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {46},
number = {2},
issn = {0098-3500},
url = {https://doi.org/10.1145/3381449},
doi = {10.1145/3381449},
abstract = {Mathematical software and graph-theoretical algorithmic packages to efficiently model,
analyze, and query graphs are crucial in an era where large-scale spatial, societal,
and economic network data are abundantly available. One such package is JGraphT, a
programming library that contains very efficient and generic graph data structures
along with a large collection of state-of-the-art algorithms. The library is written
in Java with stability, interoperability, and performance in mind. A distinctive feature
of this library is its ability to model vertices and edges as arbitrary objects, thereby
permitting natural representations of many common networks, including transportation,
social, and biological networks. Besides classic graph algorithms such as shortest-paths
and spanning-tree algorithms, the library contains numerous advanced algorithms: graph
and subgraph isomorphism, matching and flow problems, approximation algorithms for
NP-hard problems such as independent set and the traveling salesman problem, and several
more exotic algorithms such as Berge graph detection. Due to its versatility and generic
design, JGraphT is currently used in large-scale commercial products, as well as noncommercial
and academic research projects.In this work, we describe in detail the design and
underlying structure of the library, and discuss its most important features and algorithms.
A computational study is conducted to evaluate the performance of JGraphT versus several
similar libraries. Experiments on a large number of graphs over a variety of popular
algorithms show that JGraphT is highly competitive with other established libraries
such as NetworkX or the BGL.},
journal = {ACM Trans. Math. Softw.},
month = may,
articleno = {16},
numpages = {29},
keywords = {graph theory, Algorithmic library, network analysis, data structures}
}

@incollection{erdos2011evolution,
  title={On the evolution of random graphs},
  author={Erd{\"o}s, Paul and R{\'e}nyi, Alfr{\'e}d},
  booktitle={The structure and dynamics of networks},
  pages={38--82},
  year={2011},
  publisher={Princeton University Press}
}

@inproceedings{kim2003generating,
  title={Generating random regular graphs},
  author={Kim, Jeong Han and Vu, Van H},
  booktitle={Proceedings of the thirty-fifth annual ACM symposium on Theory of computing},
  pages={213--222},
  year={2003}
}

@book{tarjan1983data,
  title={Data structures and network algorithms},
  author={Tarjan, Robert Endre},
  year={1983},
  publisher={SIAM}
}